
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'
//apply plugin: 'junit


mainClassName = 'MNIST_neuroverkko.Main'

repositories {
    jcenter()
    mavenCentral()
}
dependencies {
    testCompile('junit:junit:4.12')
    //testRuntime("org.junit.jupiter:junit-jupiter-engine:1.0.1")
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.1")

}

//ext

test {
//    useJunit()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}


//
////apply plugin: 'java'
//apply plugin: 'jacoco'
//apply plugin: 'application'
//
//
//mainClassName = 'MNIST_neuroverkko.Main'
//
//repositories {
//    jcenter()
//    mavenCentral()
//}
//
////dependencies {
////    testCompile 'junit:junit:4.12'
////}

 
//dependencies {
//	// JUnit Jupiter API and TestEngine implementation
//        //testCompile('junit:junit:4.12')
//        testCompile("junit:junit:${junit4Version}")
//	//testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
//        //testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
//	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
////        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
//
//	// If you also want to support JUnit 3 and JUnit 4 tests
////	testImplementation("junit:junit:${junit4Version}")
//////	//testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
////        testRuntimeOnly("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
//////
////	// To avoid compiler warnings about @API annotations in JUnit code
////	testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
//
//	// To use Log4J's LogManager
//	//testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
//	//testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
//
//	// Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
//	//testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
//}


//
//
//task testJUnitJupiter(type: Test) {
//    description = "Runs JUnit Jupiter tests."
//    useJUnitPlatform {
//        includeEngines "junit-jupiter"
//        excludeTags "failing-test-case"
//    }
//    //filter {
//    //    includeTestsMatching "org.springframework.test.context.junit.jupiter.*"
//    //}
//    reports.junitXml.destination = file("$buildDir/test-results")
//    // Java Util Logging for the JUnit Platform.
//     systemProperty("java.util.logging.manager", "org.apache.logging.log4j.jul.LogManager")
//}
//
//task junitTest {
//    useJunit()
//}

//task testjuntilla {
//    description = "Runs JUnit 4 tests."
//    dependsOn testJUnitJupiter
//    useJUnit()
//    //scanForTestClasses = false
//    //include(["**/*Tests.class", "**/*Test.class"])
////    exclude(["**/testng/**/*.*", "**/jupiter/**/*.*"])
////    reports.junitXml.destination = file("$buildDir/test-results")
//    finalizedBy jacocoTestReport
//}
////
//task testJunit {
//    useJunitPlatform()
//}
//
//test {
//    finalizedBy jacocoTestReport
//}
//
//
//jacocoTestReport {
//    dependsOn test
//}

//task run(type: JavaExec) {
//  group = 'Run' // <-- change the name as per your need
//  description = 'Small description what this run will do'
//
//  classpath sourceSets.main.runtimeClasspath // <-- Don't change this
//  main = "MNIST_neuroverkko.Main"
//  //args "arg1", "arg2"
//}

//task run(type: JavaExec) {
//  group = 'Run' // <-- change the name as per your need
//  description = 'Small description what this run will do'
//
//  classpath sourceSets.main.runtimeClasspath // <-- Don't change this
//  main = "MNIST_neuroverkko.Main"
//  //args "arg1", "arg2"
//}


//
////buildscript {
//	repositories {
//		mavenCentral()
//	}
//	dependencies {
//		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
//	}
//}
//
//
//
//ext.junit4Version        = '4.12'
//ext.junitVintageVersion  = '4.12.1'
//ext.junitPlatformVersion = '1.0.1'
//ext.junitJupiterVersion  = '5.0.1'
//ext.log4jVersion         = '2.9.0'
//
//apply plugin: 'java'
//apply plugin: 'eclipse'
//apply plugin: 'idea'
//apply plugin: 'jacoco'
//
//repositories {
//	mavenCentral()
//        jcenter()
//}
//
//apply plugin: 'org.junit.platform.gradle.plugin'
//jacoco {
//    toolVersion = '0.8.3'
//}
//
//jacocoTestReport {
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//}
//sourceCompatibility = 1.8
//targetCompatibility = 1.8
//check.dependsOn jacocoTestReport
////jacocoTestReport {
////    reports {
////        csv.enabled = false
////        xml.enabled = false
////        html.enabled = true
////    }
////    afterEvaluate { // (optional) : to exclude classes / packages from coverage
////        classDirectories.from = files(classDirectories.files.collect {
////            fileTree(
////                dir: it)
////                //exclude: [ 'snmaddula/sboot/crud/App.class', 'snmaddula/sboot/util/**' ])
////        })
////    }
////}
//
//build.dependsOn jacocoTestReport
//
//
//jar {
//	baseName = 'junit5-gradle-consumer'
//	version = '1.0.0-SNAPSHOT'
//}
//
//
////test {
////    ignoreFailures = true
////}
//
//compileTestJava {
//	sourceCompatibility = 1.8
//	targetCompatibility = 1.8
//	options.compilerArgs += '-parameters'
//}
//
//junitPlatform {
//	// platformVersion '1.0.1'
//	filters {
//		engines {
//			// include 'junit-jupiter', 'junit-vintage'
//			// exclude 'custom-engine'
//		}
//		tags {
//			// include 'fast'
//			exclude 'slow'
//		}
//		// includeClassNamePattern '.*Test'
//	}
//	// configurationParameter 'junit.jupiter.conditions.deactivate', '*'
//	// enableStandardTestTask true
//	// reportsDir file('build/test-results/junit-platform') // this is the default
//	//logManager 'org.apache.logging.log4j.jul.LogManager'
//}
//
//dependencies {
//	// JUnit Jupiter API and TestEngine implementation
//	//testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
//        testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
//	//testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
//        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
//
//	// If you also want to support JUnit 3 and JUnit 4 tests
//	testImplementation("junit:junit:${junit4Version}")
//	//testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
//        testRuntimeOnly("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
//
//	// To avoid compiler warnings about @API annotations in JUnit code
//	testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
//
//	// To use Log4J's LogManager
//	//testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
//	//testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
//
//	// Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
//	//testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
//}
//
////task wrapper(type: Wrapper) {
////	description = 'Generates gradlew[.bat] scripts'
////	gradleVersion = '4.1'
////}
//
//
////jacocoTestReport {
////    //additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
////    reports {
////        xml.enabled false
////        csv.enabled false
////        html.destination "${buildDir}/reports/jacoco/html"
////    }
////    executionData = files('build/jacoco/test.exec')
////}
////task jacocoIntegrationTestReport(type: JacocoReport) {
////   sourceSets sourceSets.main
////   executionData integrationTest
////}
////task jacocoTestReport(type: JacocoReport) {
////    jacocoTestReport {
////    reports {
////            xml.enabled true
////            csv.enabled false
////            html.enabled true
////            xml.destination "${buildDir}/jacoco"
////        }  
////    }
////}
//
//
////test {
////    include 'src/test/java'
////    finalizedBy jacocoTestReport
////}
//task codeCoverageReport(type: JacocoReport) {
//    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
//
//    subprojects.each {
//        sourceSets it.sourceSets.main
//    }
//
//    reports {
//        xml.enabled true
//        xml.destination file("${buildDir}/reports/jacoco/report.xml")
//        html.enabled false
//        csv.enabled false
//    }
//}
//
//test {
//    include 'src/test/java'
//    useJUnitPlatform()
//    finalizedBy codeCoverageReport
//    reports {
//        junitXml.enabled = false
//        html.enabled = true
//    }
//    
//task run(type: JavaExec) {
//  group = 'Run' // <-- change the name as per your need
//  description = 'Small description what this run will do'
//
//  classpath sourceSets.main.runtimeClasspath // <-- Don't change this
//  main = "MNIST_neuroverkko.Main"
//  //args "arg1", "arg2"
//}
/// TÄHÄN ASTI OLI KÄYTÖSSÄ
   
    
    

//     jacoco {
//        enabled = true
//        destinationFile = file("$buildDir/jacoco/${name}.exec")
//        includes = []
//        excludes = []
//        excludeClassLoaders = []
//        includeNoLocationClasses = false
//        sessionId = "<auto-generated value>"
//        dumpOnExit = true
//        classDumpDir = null
//        output = JacocoTaskExtension.Output.FILE
//        address = "localhost"
//        port = 6300
//        jmx = false
//    }
//    jacoco {
//        append = false
//        destinationFile = file("$buildDir/jacoco/test.exec")
//    }
//}
//jacocoTestReport {
//   reports {
//     xml.enabled true
//     csv.enabled false
//     html.enabled false
//     xml.destination "${buildDir}/jacoco"
// }  
//}





    
//    jacoco {
//        enabled = true
//        destinationFile = file("$buildDir/jacoco/${name}.exec")
//        includes = []
//        excludes = []
//        excludeClassLoaders = []
//        includeNoLocationClasses = false
//        sessionId = "<auto-generated value>"
//        dumpOnExit = true
//        classDumpDir = null
//        output = JacocoTaskExtension.Output.FILE
//        address = "localhost"
//        port = 6300
//        jmx = false
//    }
//}

//jacocoTestReport {
//    reports {
//        xml.enabled true
//        csv.enabled true
//        html.destination file("${buildDir}/jacocoHtml")
//    }
//}


// // buildscript {
// //    repositories {
// //        mavenCentral()
// //    }
// //    dependencies {
// //        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
// //    }
// // }

// repositories {
//     jcenter()
//     mavenCentral()
// }

// ext.junit4Version        = '4.12'
// ext.junitVintageVersion  = '4.12.2'
// ext.junitPlatformVersion = '1.0.2'

// apply plugin: 'java'

// apply plugin: 'application'
// apply plugin: 'org.junit.platform.gradle.plugin'


// mainClassName = 'MNIST_neuroverkko.Main'


// // tag::dependencies[]
// //ext.junit4Version        = '4.12'

// test {
//     useJUnitPlatform()
// }


// //dependencies {
// //    testImplementation(
// //            'junit:junit:4.12',
// //            //'org.junit.jupiter:junit-jupiter-api:5.4.2'
// //    )
// //    testRuntime(
// //            'org.junit.jupiter:junit-jupiter-engine:5.4.2',
// //            'org.junit.vintage:junit-vintage-engine:5.4.2'
// //    )
// //}


// dependencies {
//     testImplementation 'junit:junit:4.13'
// }

// ////
// //dependencies {
// //    testCompile('junit:junit:4.12'){
// //        exclude group: 'org.hamcrest'
// //    }
// //    testCompile 'org.hamcrest:hamcrest-library:1.3'
// //}

// ////
// //dependencies {
// //    // JUnit Jupiter API and TestEngine implementation
// //    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
// //    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
// // 
// //    // If you also want to support JUnit 3 and JUnit 4 tests
// //    testCompile("junit:junit:${junit4Version}")
// //    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
// // 
// //    // To avoid compiler warnings about @API annotations in JUnit code
// //    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
// // 
// //    // To use Log4J's LogManager
// //    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
// //    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
// // 
// //    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
// //    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
// //}

// //dependencies {
// //    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
// //    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
// //    testCompileOnly 'junit:junit:4.12' 
// //    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'
// //}
// // dependencies {
// //    testCompile 'junit:junit:4.12'
// // }

// test {
//     useJUnitPlatform()
//     testLogging {
//         showStandardStreams = true
//     }
// }

// sourceSets {
//     main {
//         java {
//             srcDirs = ["src"]
//             tstDirs = ["test"]
//         }
//     }
// }